# Imagen base oficial de PHP con Apache
FROM php:8.3-apache

# Instalar dependencias del sistema y extensiones PHP necesarias
RUN apt-get update && apt-get install -y \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    zip \
    unzip \
    git \
    curl \
    libzip-dev \
    netcat-openbsd \
    wget \
    gnupg \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd zip \
    && pecl install redis \
    && docker-php-ext-enable redis \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Instalar Composer
COPY --from=composer:2.7 /usr/bin/composer /usr/bin/composer

# Directorio de trabajo
WORKDIR /var/www/html

# Copiar archivos de configuración primero para aprovechar caché
COPY composer.json composer.lock package.json package-lock.json ./

# Instalar dependencias de PHP (incluyendo dev para desarrollo)
RUN composer install --optimize-autoloader --no-scripts

# Instalar dependencias de Node.js (desarrollo - incluye devDependencies)
RUN npm ci --timeout=300000

# Copiar el resto del proyecto
COPY . .

# Crear archivo .env desde el ejemplo
RUN cp env.docker.example .env

# Crear carpetas que Laravel necesita y dar permisos
RUN mkdir -p /var/www/html/storage/framework/{cache,sessions,views} \
    && mkdir -p /var/www/html/storage/logs \
    && mkdir -p /var/www/html/storage/app/public/{productos,fotos_perfil,perfiles} \
    && touch /var/www/html/storage/logs/laravel.log \
    && chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache \
    && chmod -R 755 /var/www/html/storage \
    && chmod -R 777 /var/www/html/storage/framework \
    && chmod -R 777 /var/www/html/storage/logs \
    && chmod -R 777 /var/www/html/storage/app/public \
    && chmod -R 777 /var/www/html/bootstrap/cache

# Ejecutar Artisan
RUN composer dump-autoload -o \
    && php artisan package:discover --ansi || true

# Compilar assets de producción
RUN npm run build

# Crear enlace simbólico de storage
RUN php artisan storage:link

# Asegurar permisos finales después de todas las operaciones
RUN chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache /var/www/html/public/storage \
    && chmod -R 755 /var/www/html/storage \
    && chmod -R 777 /var/www/html/storage/framework \
    && chmod -R 777 /var/www/html/storage/logs \
    && chmod -R 777 /var/www/html/storage/app/public \
    && chmod -R 777 /var/www/html/bootstrap/cache \
    && chmod -R 755 /var/www/html/public/storage

# Habilitar módulos de Apache
RUN a2enmod rewrite headers

# Copiar configuración de Apache personalizada
COPY ./docker/apache/laravel.conf /etc/apache2/sites-available/000-default.conf

# Copiar script de inicialización
COPY ./docker/init.sh /usr/local/bin/init.sh
RUN chmod +x /usr/local/bin/init.sh

# Exponer puerto
EXPOSE 80

# Comando por defecto para queue worker
CMD ["/usr/local/bin/init.sh", "php", "artisan", "queue:work", "redis", "--tries=3", "--sleep=1", "--timeout=90", "--memory=512"]
